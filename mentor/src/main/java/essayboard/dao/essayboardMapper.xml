<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="essaySQL">

	<!-- (신규)에세이 리스트 출력 -->
	<select id="getNewEssay" resultType="essay">
		SELECT
      		*
  		FROM
      	(
          SELECT
              ROWNUM rn, tt.*
          FROM
              (
              	  SELECT
              	      e.essayboard_seq,
                   	  e.essayboard_title,
                      e.essayboard_content,
                      e.essayboard_scrap,
                      e.essayboard_logtime,
                      mm.member_name,
                      mm.member_seq,
                      mm.member_profile,
                      mt.mentor_company,
                      mt.mentor_department,
                      mt.mentor_flag,
                      mt.mentor_email
                  FROM
                      essayboard       e,
                      mentor           mt,
                      mentors_member   mm
                   WHERE
                          e.mentor_email = mt.mentor_email
                      AND mt.mentor_email = mm.member_email
                      ORDER BY
                      essayboard_logtime DESC
              ) tt)
		WHERE
			 <![CDATA[
	         	rn >= #{startNum, jdbcType=INTEGER} and rn <= #{endNum, jdbcType=INTEGER}
			 ]]>
		
	</select>
	
	<!-- 추천 에세이 리스트 출력 -->
	<select id="getRecommendEssay" parameterType="Map" resultType="essay">
		SELECT
      		*
  		FROM
      	(
          SELECT
              ROWNUM rn, tt.*
          FROM
              (
              	  SELECT
              	      e.essayboard_seq,
                   	  e.essayboard_title,
                      e.essayboard_content,
                      e.essayboard_scrap,
                      e.essayboard_logtime,
                      mm.member_name,
                      mm.member_seq,
                      mm.member_profile,
                      mt.mentor_company,
                      mt.mentor_department,
                      mt.mentor_flag,
                      mt.mentor_email
                  FROM
                      essayboard       e,
                      mentor           mt,
                      mentors_member   mm
                   WHERE
                          e.mentor_email = mt.mentor_email
                      AND mt.mentor_email = mm.member_email
                      AND e.essayboard_scrap > 0
              ) tt)
		WHERE
			 <![CDATA[
	         	rn >= #{startNum, jdbcType=INTEGER} and rn <= #{endNum, jdbcType=INTEGER}
			 ]]>
	</select>
	
	<!-- 에세이 글쓰기 -->
	<insert id="essayboardWrite" parameterType="java.util.Map">
		INSERT
			into essayboard
			(
				essayboard_seq,
				mentor_email,
				job_code,
				essayboard_title,
				essayboard_content,
				essayboard_logtime
			)
		VALUES(essayboard_seq.nextval
			, #{mentor_email, jdbcType=VARCHAR}
			, #{job_code, jdbcType=VARCHAR}
			, #{essayboard_title, jdbcType=VARCHAR}
			, #{essayboard_content, jdbcType=VARCHAR}
			, sysdate
		)
	</insert>
	
	<!-- 에세이 글 가져오기(수정) -->
	<select id="getEssayboard" parameterType="Int" resultType="essay">
		SELECT
			e.job_code,
            e.essayboard_title,
            e.essayboard_content,
            j.job_type
		FROM 
		    essayboard e, job j
		WHERE
		    e.job_code = j.job_code
		AND
		    e.essayboard_seq = #{seq}
	</select>
	
	<!-- 에세이 수정 처리 -->
	<update id="essayboardModify" parameterType="Map">
		UPDATE
			essayboard
		SET
		  	essayboard_title = #{essayboard_title, jdbcType=VARCHAR}
		  , essayboard_content = #{essayboard_content, jdbcType=VARCHAR}
		  , job_code = #{job_code, jdbcType=VARCHAR}
		WHERE
		 essayboard_seq = #{seq, jdbcType=INTEGER}
	</update>
	
	<!-- 직무 유형 -->
	<select id="essayjobType" parameterType="Map" resultType="essay">
		select * from
                  (select rownum rn, tt.* from
                  (SELECT
                      e.*,
                      j.job_type,
                      mm.member_name,
                      mm.member_seq,
                      mm.member_profile,
                      mt.mentor_company,
                      mt.mentor_department,
                      mt.mentor_represent,
                      mt.mentor_flag
                  FROM
                      essayboard       e,
                      job              j,
                      mentor           mt,
                      mentors_member   mm
                  WHERE
                      e.job_code = j.job_code
                      AND e.mentor_email = mt.mentor_email
                      AND mt.mentor_email = mm.member_email
                  <if test='flag == "0"'>
                  	ORDER BY e.essayboard_logtime DESC 
                  </if>
                  <if test='flag == "1"'>
                  	AND e.essayboard_scrap > 0
                  </if>
                     
                  )tt
	                  WHERE 
	                  	job_code 
	                  IN
	                  <foreach collection="job_code" item="job_code" index="index" separator="," open="(" close=")">
	                  	  #{job_code, jdbcType=VARCHAR}
                  	  </foreach>
                       )
                  <![CDATA[ 
                      where rn >= #{startNum, jdbcType=INTEGER} and rn<= #{endNum, jdbcType=INTEGER}
                  ]]>
	</select>
	
	
	<!-- 직무유형에 따른 총 글 수 -->
	<select id="getEssayDuty" parameterType="Map" resultType="Int">
		SELECT 
		COUNT(*) FROM
                  (SELECT
                      e.*,
                      j.job_type,
                      mm.member_name,
                      mm.member_seq,
                      mt.mentor_company,
                      mt.mentor_department,
                      mt.mentor_represent
                  FROM
                      essayboard       e,
                      job              j,
                      mentor           mt,
                      mentors_member   mm
                  WHERE
                      e.job_code = j.job_code
                      AND e.mentor_email = mt.mentor_email
                      AND mt.mentor_email = mm.member_email
                  <if test='flag == "0"'>
                  	ORDER BY e.essayboard_logtime DESC 
                  </if>
                  <if test='flag == "1"'>
                  	AND e.essayboard_scrap > 0
                  </if>
                  )
                  WHERE 
                  	  job_code 
                  IN
                  	  <foreach collection="job_code" item="job_code" index="index" separator="," open="(" close=")">
                  	  		#{job_code, jdbcType=VARCHAR}
                  	  </foreach>
	</select>
		
	<!-- 멘토 명함 출력 -->
	<select id="getMentorBusinessCard" parameterType="Int" resultType="mentor">
		SELECT 
            mm.member_name,
            mm.member_profile,
            mt.*,
            j.job_type
        FROM
            mentor           mt,
            job              j,
            mentors_member   mm
        WHERE
            mt.mentor_email = mm.member_email
            AND mt.job_code = j.job_code
            AND mm.member_seq = #{member_seq};
	</select>

	<!-- 에세이 총 글 수 -->
	<select id="getTotalA" resultType="Int">
		SELECT
			count(*)
		FROM
			essayboard
	</select>
	
	<!-- 추천 에세이 총 글 수 -->
	<select id="getRecommendTotal" resultType="Int">
		SELECT
			count(*)
		FROM
			essayboard
		WHERE
			essayboard_scrap > 0 
	</select>
	
	<!-- 에세이  뷰 -->
	<select id="getEssayboardView" parameterType="Int" resultType="essay">
		SELECT
		    essayboard_title,
		    essayboard_content,
		    essayboard_scrap,
		    essayboard_hit,
		    essayboard_scrapFlag
		FROM 
		    essayboard
		WHERE
		    essayboard_seq = #{seq} 
	</select>
	
	<!-- 에세이 글 삭제 -->
	<delete id="essayboardDelete" parameterType="Int">
		DELETE
			essayboard
		WHERE
			essayboard_seq = #{seq}
	</delete>
	
	<!-- 스크랩 조회 / 양재우 -->
	<select id="getEssayboardScrap" parameterType="essayboardScrap" resultType="Integer">
   		select count(*) 
   		from essayboardScrap 
   		where essayboardScrap_es_seq =#{seq} and
   			  essayboardScrap_mem_email = #{memEmail}
   </select>
   <!-- 스크랩 정보 삭제 / 양재우 -->
   <delete id="essayboardScrapDelete" parameterType="essayboardScrap">
   	delete from essayboardScrap where essayboardScrap_es_seq = #{essayboardScrap_es_seq} AND essayboardScrap_mem_email = #{essayboardScrap_mem_email}
   </delete>
   <!-- 스크랩 정보 삽입 / 양재우 -->
   <insert id="essayboardScrapInsert" parameterType="essayboardScrap">
   insert into essayboardScrap (essayboardScrap_es_seq,essayboardScrap_mem_email) values(#{essayboardScrap_es_seq},#{essayboardScrap_mem_email})
   </insert>
	<!-- menteeboaerd good 업데이트 /양재우-->
   <update id="essayboardScrapUpdate" parameterType="Integer">
   update essayboard set essayboard_scrap = (select count(*) from essayboardScrap where essayboardScrap_es_seq = #{essayboardScrap_es_seq})
   where essayboard_seq = #{essayboardScrap_es_seq}
   </update>
   
   <!--에세이보드의 스크랩 갯수 / 양재우 -->
   <select id="getTotalScrap" parameterType="Integer" resultType="Integer">
   select count(*) from essayboardScrap where essayboardScrap_es_seq = #{essayboardScrap_es_seq}
   </select>
   
   <!-- 로그인한 사람이 스크랩한 에세이보드 / 양재우  -->
   <select id="getEssayboardAttention" parameterType="String" resultType="essay">
   select
                      e.essayboard_seq,
                      e.essayboard_title,
                      e.essayboard_content,
                      e.essayboard_scrap,
                      e.essayboard_logtime,
                      mm.member_name,
                      mm.member_seq,
                      mm.member_profile,
                      mt.mentor_company,
                      mt.mentor_department,
                      mt.mentor_flag,
                      mt.mentor_email
                  from
                      essayboard       e,
                      mentor           mt,
                      mentors_member   mm,
                      essayboardScrap  ebs
                  where
                       e.mentor_email = mt.mentor_email
                      and mt.mentor_email = mm.member_email
                      and ebs.essayboardscrap_es_seq = e.essayboard_seq
                      and ebs.essayboardscrap_mem_email = #{memEmail}
                 order by ebs.essatboardscrap_logtime desc
   </select>
	
	<select id="getBestEssay" parameterType="java.util.Map" resultType="essay">
		SELECT * FROM
      	(SELECT ROWNUM rn, tt.* FROM
            (SELECT
              	      e.essayboard_seq,
                   	  e.essayboard_title,
                      e.essayboard_content,
                      e.essayboard_scrap,
                      e.essayboard_logtime,
                      mm.member_name,
                      mm.member_seq,
                      mm.member_profile,
                      mt.mentor_company,
                      mt.mentor_department,
                      mt.mentor_flag,
                      mt.mentor_email
                  FROM
                      essayboard       e,
                      mentor           mt,
                      mentors_member   mm
                   WHERE
                          e.mentor_email = mt.mentor_email
                      AND mt.mentor_email = mm.member_email
                      AND e.essayboard_scrap > 0
              ) tt)
		WHERE
			 <![CDATA[
	         	rn >= #{startNum} and rn <= #{endNum}
			 ]]>
		order by essayboard_logtime desc
	</select>
</mapper>
